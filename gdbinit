# gdbinit 文件功能和作用说明：
# ------------------------------------------------------------------------------------------------
# 本 gdbinit 文件包含了 GDB 调试器启动时自动执行的命令序列。
# 它的主要功能是：
# 1. 连接到QEMU模拟器提供的GDB服务器。
# 2. 配置GDB以正确识别RISC-V 64位架构。
# 3. 加载待调试的内核ELF文件中的符号表。
# 4. 设置输出数字的默认进制为十六进制。
# 5. 设置断点在内核入口处。
# 6. 配置GDB的布局以方便查看代码和寄存器。
# 7. 启动程序执行。
#
# 其目的是为了自动化GDB的初始化过程，使得调试RISC-V内核更加便捷和高效。
# ------------------------------------------------------------------------------------------------

target remote localhost:1234
# target remote localhost:1234: 连接到运行在本地主机（localhost）1234端口的远程GDB服务器。
# 这个服务器通常由QEMU通过 `-s` 选项启动，用于GDB与模拟器中的CPU通信。

set architecture riscv:rv64
# set architecture riscv:rv64: 告诉GDB当前调试的目标架构是RISC-V 64位。
# 这确保GDB能够正确解析指令、寄存器和内存布局。

symbol-file kernel.elf
# symbol-file kernel.elf: 加载 'kernel.elf' 文件的符号表和调试信息。
# 这使得GDB可以将内存地址映射到源代码行、函数名和变量名，从而进行源代码级别的调试。

set output-radix 16
# set output-radix 16: 设置GDB在显示数字（如寄存器值、内存地址等）时，默认使用十六进制表示。
# 这在低级系统编程（如内核开发）中非常常见和方便。

b _entry
# b _entry: 在名为 '_entry' 的函数（通常是内核的汇编入口点）处设置一个断点。
# 当程序执行到这个位置时，GDB会暂停执行，等待用户命令。

layout split
# layout split: 更改GDB的终端界面布局。
# 'split' 布局通常会显示源代码窗口和汇编代码窗口（或寄存器窗口），方便同步查看。

c
# c: 'continue' 的缩写，指示GDB从当前暂停的位置继续执行程序。
# 在设置断点后，此命令会使程序运行到断点处停止。
